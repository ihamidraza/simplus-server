{
    "version": "2.7.1"
    ,"compilerOptions": {
        /* Basic Options */
        "target": "es5"                                     /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'. */
        ,"module": "commonjs"                                 /* Specify module code generation: 'commonjs', 'amd', 'system', 'umd' or 'es2015'. */
        ,"lib": [
            // list your compilation libs here.
            "es6",
            "dom"
            ]                                               /* Specify library files to be included in the compilation:  */
        ,"allowJs": false                                   /* Allow javascript files to be compiled. */
        ,"checkJs": false                                   /* Report errors in .js files. */
        ,"declaration": true                                /* Generates corresponding '.d.ts' file. */
        ,"sourceMap": false                                 /* Generates corresponding '.map' file. */
        ,"outDir": "./build"                                /* Redirect output structure to the directory. */
        // ,"outFile": "./build/server.js"                  /* Concatenate and emit output to single file. */
        ,"removeComments": true                             /* Do not emit comments to output. */
        ,"noEmit": false                                    /* Do not emit outputs. */
        ,"listEmittedFiles"  : true                         /* Print names of generated files part of the compilation.*/
        ,"importHelpers": true                              /* Import emit helpers from 'tslib'. */
        ,"downlevelIteration": true                         /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        ,"isolatedModules": false                           /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

        /* Strict Type-Checking Options */
        ,"strict": true                                     /* Enable all strict type-checking options. */
        ,"noImplicitAny": true                              /* Raise error on expressions and declarations with an implied 'any' type. */
        ,"strictNullChecks": true                           /* Enable strict null checks. */
        ,"noImplicitThis": true                             /* Raise error on 'this' expressions with an implied 'any' type. */
        ,"alwaysStrict": true                               /* Parse in strict mode and emit "use strict" for each source file. */

        /* Additional Checks */
        ,"noUnusedLocals": true                             /* Report errors on unused locals. */
        ,"noUnusedParameters": true                         /* Report errors on unused parameters. */
        ,"noImplicitReturns": true                          /* Report error when not all code paths in function return a value. */
        ,"noFallthroughCasesInSwitch": true                 /* Report errors for fallthrough cases in switch statement. */
        ,"forceConsistentCasingInFileNames": true           /* Disallow inconsistently-cased references to the same file.*/

        /* Module Resolution Options */
        ,"moduleResolution": "node"                         /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        ,"typeRoots": [
            "./node_modules"
        ]                                                   /* List of folders to include type definitions from. */
        ,"types": [
            // list you ms type dependencies here.
            "@types/bunyan",
            "@types/express"
        ]                                                   /* Type declaration files to be included in compilation. */
        ,"allowSyntheticDefaultImports": false              /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        ,"noResolve": false                                 /* Do not add triple-slash references or module import targets to the list of compiled files. */

        /* Experimental Options */
        ,"experimentalDecorators": false                    /* Enables experimental support for ES7 decorators. */
        ,"emitDecoratorMetadata": false                     /* Enables experimental support for emitting type metadata for decorators. */
        ,"pretty" : true                                    /* Stylize errors and messages using color and context.*/

        }
    ,"files": [
        "./src/bin/server.ts"
    ]
    ,"exclude": [
        "node_modules",
        "**/*.spec.ts"
    ]
}